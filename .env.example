# Capital.com API Configuration
# Copy this file to .env and fill in your actual credentials

# ===========================================
# AUTHENTICATION CREDENTIALS
# ===========================================

# Your Capital.com account credentials
CAPITAL_USERNAME=your-email@example.com
CAPITAL_PASSWORD=your-password

# API Key - Required for API access
# Get this from your Capital.com account settings > API access
CAPITAL_API_KEY=your-api-key-here

# API Base URLs
CAPITAL_API_BASE_URL=https://api-capital.backend-capital.com
CAPITAL_DEMO_API_BASE_URL=https://demo-api-capital.backend-capital.com

# WebSocket URLs
CAPITAL_WS_URL=wss://api-capital.backend-capital.com/websockets
CAPITAL_DEMO_WS_URL=wss://demo-api-capital.backend-capital.com/websockets

# ===========================================
# API AUTHENTICATION TOKENS
# ===========================================

# These will be populated after successful login
# You can also set them manually if you have them
CAPITAL_CST=
CAPITAL_SECURITY_TOKEN=
CAPITAL_ACCOUNT_ID=

# ===========================================
# TESTING CONFIGURATION
# ===========================================

# Set to 'true' to use demo environment (recommended for testing)
USE_DEMO_ENVIRONMENT=true

# Test timeout settings (in milliseconds)
API_TIMEOUT=30000
WEBSOCKET_TIMEOUT=10000

# Rate limiting (requests per second)
MAX_REQUESTS_PER_SECOND=10

# ===========================================
# TEST DATA CONFIGURATION
# ===========================================

# Market EPICs for testing (these should exist in Capital.com)
TEST_EPIC_GOLD=GOLD
TEST_EPIC_SILVER=SILVER
TEST_EPIC_EURUSD=EUR/USD
TEST_EPIC_BITCOIN=BITCOIN

# Position testing parameters
TEST_POSITION_SIZE=0.1
TEST_STOP_DISTANCE=50
TEST_LIMIT_DISTANCE=50

# Working order testing parameters
TEST_ORDER_SIZE=0.1
TEST_ORDER_LEVEL_OFFSET=100

# ===========================================
# WATCHLIST TESTING
# ===========================================

# Test watchlist name
TEST_WATCHLIST_NAME=API_Test_Watchlist

# ===========================================
# LOGGING AND DEBUGGING
# ===========================================

# Set to 'true' to enable debug logging
DEBUG_MODE=false

# Set to 'true' to log all API requests/responses
LOG_API_CALLS=false

# Set to 'true' to log WebSocket messages
LOG_WEBSOCKET_MESSAGES=false

# ===========================================
# SAFETY SETTINGS
# ===========================================

# Maximum position size for safety (will prevent large trades)
MAX_POSITION_SIZE=1.0

# Set to 'true' to enable position creation in tests (be careful!)
ENABLE_POSITION_CREATION=false

# Set to 'true' to enable working order creation in tests
ENABLE_ORDER_CREATION=false

# Set to 'true' to enable account modification tests
ENABLE_ACCOUNT_MODIFICATIONS=false

# ===========================================
# HISTORICAL DATA TESTING
# ===========================================

# Date range for historical data tests (YYYY-MM-DD format)
HISTORICAL_DATA_FROM=2024-01-01
HISTORICAL_DATA_TO=2024-01-31

# Resolution for historical data tests
HISTORICAL_DATA_RESOLUTION=HOUR

# Maximum number of price points to fetch
HISTORICAL_DATA_MAX_POINTS=100

# ===========================================
# ENVIRONMENT NOTES
# ===========================================

# IMPORTANT SECURITY NOTES:
# 1. Never commit this file with real credentials to version control
# 2. Use demo environment for testing whenever possible
# 3. Be extremely careful with position/order creation flags
# 4. Monitor your account when running tests with real money
# 5. Consider using a separate demo account for API testing

# DEMO ACCOUNT SETUP:
# 1. Create a free demo account at https://capital.com
# 2. Use demo credentials and demo API URLs
# 3. Demo accounts have virtual money and are safe for testing

# RATE LIMITING:
# Capital.com has rate limits on their API
# Respect these limits to avoid being blocked
# Consider adding delays between requests in tests

# ERROR HANDLING:
# The API may return errors for various reasons:
# - Invalid credentials
# - Market closed
# - Insufficient funds
# - Invalid parameters
# Make sure your tests handle these gracefully